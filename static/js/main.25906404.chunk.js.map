{"version":3,"sources":["component/Header.js","component/IntroDiv.js","component/NavBar.js","component/Main.js","component/Footer.js","API.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","handleIntroToggle","handleListToggle","react_default","a","createElement","className","aria-labelledby","id","href","onClick","onKeyPress","IntroDiv","introduction","tabIndex","name","synopsis","url","NavBar","state","query","updateQuery","q","_this","setState","clearQuery","showingLocations","_this2","this","_this$props","markers","locations","showMarkerInfo","match","RegExp","escapeRegExp","filter","location","test","forEach","marker","title","setVisible","sort","sortBy","lib","minLength","debounceTimeout","autoFocus","type","placeholder","value","onChange","e","target","length","map","key","role","Component","Main","listOpen","component_NavBar","Footer","getGoogleMap","googleMapPromise","Promise","resolve","window","resolveGoogleMapPromise","google","gm_authFailure","alert","script","document","src","concat","async","defer","body","appendChild","getVenuePhoto","VenueID","endPoint","parameters","client_id","client_secret","VENUE_ID","limit","v","axios","get","URLSearchParams","then","response","photoData","data","photos","items","prefix","suffix","catch","error","console","log","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderMap","all","API","ll","venues","origin","format","action","titles","prop","piprop","pithumbsize","exsentences","explaintext","pages","search","_ref","_ref2","slicedToArray","wiki","wikiURL","pageid","description","extract","thumbnail","source","initMap","mapStyle","_this$state","infoBoxes","myLatLng","lat","lng","maps","Map","getElementById","center","zoom","mapTypeId","infowindow","InfoWindow","markerTahoe","Marker","position","animation","Animation","DROP","TahoeInfoBox","push","content","addListener","setContent","open","setZoom","setCenter","venue","getMarkerInfo","event","introOpen","bind","assertThisInitialized","handleOutsideClick","markerAnimation","removeEventListener","innerWidth","style","setProperty","addEventListener","node","contains","_this$state2","infoBox","close","getAnimation","setAnimation","BOUNCE","setTimeout","googleUrl","replace","formattedAddress","_this$state3","component_Header","ref","component_IntroDiv","component_Main","component_Footer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","HashRouter","src_App_0","URL","process","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.25906404.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction Header (props) {\n    const { handleIntroToggle, handleListToggle } = props;\n\n    return (\n        <header className=\"App-header\">\n            <section aria-labelledby=\"aria-neighborhood-map-home\">\n                <h1 id=\"aria-neighborhood-map-home\" className=\"header-title\"><a href=\"/\">Lake Tahoe Ski Resorts Map</a></h1>\n            </section>\n            <section id=\"toggle-btn\" className=\"header-btn\">\n                <button className=\"intro-btn\"\n                    aria-labelledby=\"toggle-btn\"\n                    onClick={ handleIntroToggle }\n                    onKeyPress={ handleIntroToggle }>\n                    Introduction\n                </button>\n                <button className=\"list-btn\"\n                    aria-labelledby=\"toggle-btn\"\n                    onClick={ handleListToggle }\n                    onKeyPress={ handleListToggle }>\n                    List\n                </button>\n            </section>\n        </header>\n    );\n}\n\nHeader.propTypes = {\n    handleIntroToggle: PropTypes.func.isRequired,\n    handleListToggle: PropTypes.func.isRequired\n};\n\nexport default Header\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction IntroDiv (props) {\n    const { introduction, handleIntroToggle } = props;\n\n    return (\n        <div className=\"intro-section\">\n            <h2 className=\"intro-title\" aria-labelledby=\"aria-intro-section\" tabIndex=\"0\">\n                <span>{ introduction.name }</span>\n            </h2>\n            <label id=\"aria-intro-section\" className=\"aria-label\">Lake Tahoe Introduction</label>\n\n            <a className=\"intro-close\"\n                onClick={ handleIntroToggle }\n                onKeyPress={ handleIntroToggle }>\n                Close Introduction Info\n            </a>\n\n            <div className=\"intro-synopsis\">\n                <p>{ introduction.synopsis }</p>\n            </div>\n\n            <a className=\"intro-detail\"\n                href={ introduction.url }>\n                More on Wikipedia »\n            </a>\n        </div>\n    );\n}\n\nIntroDiv.propTypes = {\n    introduction: PropTypes.object.isRequired,\n    handleIntroToggle: PropTypes.func.isRequired\n};\n\nexport default IntroDiv\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {DebounceInput} from 'react-debounce-input';\nimport escapeRegExp from 'escape-string-regexp';\nimport sortBy from 'sort-by';\n\n\nclass NavBar extends Component {\n    static propTypes = {\n      markers: PropTypes.array.isRequired,\n      locations: PropTypes.array.isRequired,\n      showMarkerInfo: PropTypes.func.isRequired\n    }\n\n    state = {\n        query: ''\n    }\n\n    updateQuery = (q) => {\n        this.setState({ query: q });\n    }\n\n    clearQuery = () => {\n        this.setState({ query: '' });\n    }\n\n    render() {\n        const { markers, locations, showMarkerInfo } = this.props;\n        const { query } = this.state;\n\n        let  showingLocations;\n        // Update searched locations and markers\n        if (query) {\n            const match = new RegExp(escapeRegExp(query), 'i');\n\n            showingLocations = locations.filter(location => match.test(location.name));\n            markers.forEach(marker => {\n                match.test(marker.title) ? marker.setVisible(true) : marker.setVisible(false);\n            });\n        } else {\n            showingLocations = locations;\n            markers.forEach(marker => marker.setVisible(true));\n        }\n\n        showingLocations.sort(sortBy('name'));\n\n        return (\n            <nav className='list-locations'>\n                <div className='search-locations'>\n                    <DebounceInput\n                        minLength={1}\n                        debounceTimeout={200}\n                        autoFocus\n                        className='search-locations-input'\n                        aria-labelledby=\"filter\"\n                        type='text'\n                        placeholder='Search Ski Resorts'\n                        value={ query }\n                        onChange={ e => this.updateQuery(e.target.value) }\n                    />\n                </div>\n\n                { showingLocations.length !== locations.length && (\n                    <div className='showing-locations'>\n                        <span>Now showing { showingLocations.length } of { locations.length } total</span>\n                        <button onClick={ this.clearQuery }>Show all</button>\n                    </div>\n                )}\n\n                <ol className='location-list' aria-labelledby=\"aria-location-list\">\n                    { showingLocations.map(location => (\n                        <li key={ location.id }\n                            className='location-list-item'\n                            aria-labelledby={ location.name }\n                            tabIndex=\"0\"\n                            role=\"button\"\n                            onClick={ () => showMarkerInfo(location) }\n                            onKeyPress={ () => showMarkerInfo(location) }\n                        >\n                            <p className='location-title'>{ location.name }</p>\n                        </li>\n                    ))}\n                </ol>\n                <label id=\"aria-location-list\" className=\"aria-label\">Locations List</label>\n            </nav>\n        )\n    }\n}\n\nexport default NavBar\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NavBar from './NavBar';\n\n\nfunction Main (props) {\n    const { listOpen, markers, locations, showMarkerInfo } = props;\n\n    return (\n        <main>\n            <section id=\"map-container\" aria-labelledby=\"aria-map\" role=\"application\">\n                <div id=\"map\" aria-labelledby=\"aria-map\"></div>\n                <label id=\"aria-map\" className=\"aria-label\">Interactive Map</label>\n            </section>\n\n            { listOpen && (\n                <section id=\"nav-container\">\n                    <NavBar\n                        markers={ markers }\n                        locations={ locations }\n                        showMarkerInfo={ showMarkerInfo }\n                    />\n                </section>\n            )}\n        </main>\n    );\n}\n\nMain.propTypes = {\n    listOpen: PropTypes.bool.isRequired,\n    markers: PropTypes.array.isRequired,\n    locations: PropTypes.array.isRequired,\n    showMarkerInfo: PropTypes.func.isRequired\n};\n\nexport default Main\n","import React from 'react'\n\n\nfunction Footer (props) {\n\n    return (\n        <footer id=\"footer\" aria-labelledby=\"aria-footer\">\n            <label id=\"aria-footer\" className=\"aria-label\">Footer: Copyright Statement</label>\n            Copyright (c) 2018 <a href=\"/\"><strong>Lake Tahoe Ski Resorts Map</strong></a> All Rights Reserved.\n        </footer>\n    );\n}\n\nexport default Footer\n","import axios from 'axios';\n\nexport function getGoogleMap() {\n    // If the promise is not defined yet, define it\n    if(!this.googleMapPromise) {\n        this.googleMapPromise = new Promise((resolve) => {\n            // Add a global handler for when the API finishes loading\n            window.resolveGoogleMapPromise = () => {\n                resolve(window.google); // Resolve the promise\n                delete window.resolveGoogleMapPromise; // Clean up\n            };\n\n            // Add a global handler for the API failure loading\n            window.gm_authFailure = () => {\n                alert(\"Error: Authentication failure to load Google Maps\");\n            };\n\n            // Load the Google Map API\n            const script = document.createElement(\"script\");\n            const API = 'AIzaSyBqGLhaozeD1dM_yjBJceWe4-Pw6DID5Qg';\n            script.src = `https://maps.googleapis.com/maps/api/js?key=${API}&callback=resolveGoogleMapPromise`;\n            script.async = true;\n            script.defer = true;\n            document.body.appendChild(script);\n        });\n    }\n    // Return a promise for the Google Map API\n    return this.googleMapPromise;\n}\n\nexport function getVenues() {\n    return new Promise((resolve) => {\n        // Foursquare API parameters\n        const endPoint = \"https://api.foursquare.com/v2/venues/search?\";\n        const parameters = {\n            client_id: \"JITY1KOHGHGZ4JO5OVQG5P1O4EFQEBNFW5E3OZZV1T0OOIRP\",\n            client_secret: \"WTMRA5V5MPGURXNIIT4WUK13FOAZJFO5V40CWB5PVTKNCOAL\",\n            query: \"ski resort\",\n            ll: \"39.0925, -120.0334\",\n            limit: 6,\n            v: \"20182507\"\n        };\n\n        // Make a request for venues\n        axios.get(endPoint + new URLSearchParams(parameters))\n            .then(response => {\n                return resolve(response.data.response.venues);\n            })\n            .catch(error => {\n                console.log(\"Error getting venues!! \" + error);\n                alert('Something wrong when loading locations...');\n            });\n    });\n}\n\nexport function getVenuePhoto(VenueID) {\n    return new Promise((resolve) => {\n        // Foursquare API parameters\n        const endPoint = `https://api.foursquare.com/v2/venues/${VenueID}/photos?`;\n        const parameters = {\n            client_id: \"JITY1KOHGHGZ4JO5OVQG5P1O4EFQEBNFW5E3OZZV1T0OOIRP\",\n            client_secret: \"WTMRA5V5MPGURXNIIT4WUK13FOAZJFO5V40CWB5PVTKNCOAL\",\n            VENUE_ID: VenueID,\n            limit: 1,\n            v: \"20182507\"\n        };\n\n        // Make a request for venue photo\n        axios.get(endPoint + new URLSearchParams(parameters))\n            .then(response => {\n                let photoData = response.data.response.photos.items[0];\n                return resolve(photoData.prefix + \"300x300\" + photoData.suffix);\n            })\n            .catch(error => {\n                console.log(\"Error get venue photo!! \" + error);\n                // alert('Something wrong when loading location photos...');\n            });\n    });\n}\n\nexport function getWiki(query) {\n    return new Promise((resolve) => {\n        // Wikipedida API parameters\n        const wikiURL = \"https://en.wikipedia.org/w/api.php?\";\n        const parameters = {\n            origin: \"*\",\n            format: \"json\",\n            action: \"query\",\n            titles: query,\n            prop: \"pageimages|description|extracts\",\n            piprop: \"name|thumbnail\",\n            pithumbsize: 500,\n            exsentences: 5,\n            explaintext: 1\n        };\n\n        // Make a request for wiki data\n        axios.get(wikiURL + new URLSearchParams(parameters))\n            .then(response => {\n                return resolve(response.data.query.pages[140899]);\n            })\n            .catch(error => {\n                console.log(\"Error getting wiki!! \" + error);\n                alert('Something wrong when loading wikipedia...');\n            });\n    });\n}\n\nexport function getWikiURL(query) {\n    return new Promise((resolve) => {\n        // Wikipedida API parameters\n        const wikiURL = \"https://en.wikipedia.org/w/api.php?\";\n        const parameters = {\n            origin: \"*\",\n            format: \"json\",\n            action: \"opensearch\",\n            limit: 1,\n            search: query\n        };\n\n        // Make a request for wikiURL\n        axios.get(wikiURL + new URLSearchParams(parameters))\n            .then(response => {\n                return resolve(response.data[3][0]);\n            })\n            .catch(error => {\n                console.log(\"Error getting wikiURL!! \" + error);\n                alert('Something wrong when loading wikipedia URL...');\n            });\n    });\n}\n","import React, { Component } from 'react';\nimport sortBy from 'sort-by';\n\nimport Header from './component/Header';\nimport IntroDiv from './component/IntroDiv';\nimport Main from './component/Main';\nimport Footer from './component/Footer';\n\nimport * as API from './API';\nimport './App.css';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            map: '',\n            infowindow: '',\n            infoBoxes: [],\n            markers: [],\n            locations: [],\n            introduction: '',\n            listOpen: false,\n            introOpen: false\n        }\n        this.mapStyle = this.mapStyle.bind(this);\n        this.handleListToggle = this.handleListToggle.bind(this);\n        this.handleIntroToggle = this.handleIntroToggle.bind(this);\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\n        this.showMarkerInfo = this.showMarkerInfo.bind(this);\n        this.markerAnimation = this.markerAnimation.bind(this);\n    }\n\n    componentWillMount() {\n        document.removeEventListener('click', this.handleOutsideClick, false);\n        API.getGoogleMap();\n    }\n\n    componentDidMount() {\n        this.renderMap();\n    }\n\n    renderMap = () => {\n        Promise.all([ API.getGoogleMap(), API.getVenues(), API.getWiki(\"Lake Tahoe\"), API.getWikiURL(\"Lake Tahoe\") ])\n        .then(([google, venues, wiki, wikiURL]) => {\n            this.setState({ venues: venues });\n            this.setState({ introduction: {id: wiki.pageid, name: wiki.title, description: wiki.description, synopsis: wiki.extract, url: wikiURL, thumbnail: wiki.thumbnail.source} });\n\n            this.initMap();\n            this.mapStyle();\n        })\n        .catch(error => {\n            console.log(\"Error render map!! \" + error);\n            alert('Error loading page...');\n        })\n    }\n\n    mapStyle() {\n        if(window.innerWidth > 560) {\n            if(!this.state.listOpen) {\n                var mapContainer = document.getElementById('map-container')\n                mapContainer.style.setProperty('--map_container-width', \"100%\")\n            }\n        }\n    }\n\n    handleListToggle() {\n        this.setState( state => ({ listOpen: !state.listOpen }));\n        this.mapStyle();\n    }\n\n    handleIntroToggle() {\n        if (!this.state.introOpen) {\n            document.addEventListener('click', this.handleOutsideClick, false);\n        } else {\n            document.removeEventListener('click', this.handleOutsideClick, false);\n        }\n\n        this.setState( state => ({ introOpen: !state.introOpen }));\n    }\n\n    handleOutsideClick(e) {\n        // ignore clicks on the component itself\n        if (this.node.contains(e.target)) {\n            return;\n        }\n        this.handleIntroToggle();\n    }\n\n    showMarkerInfo(venue) {\n        const { map, infowindow, infoBoxes, markers } = this.state;\n        let marker = markers.filter(marker => marker.id === venue.id)[0];\n        let infoBox = infoBoxes.filter(infoBox => infoBox.id === venue.id)[0];\n\n        if (marker && infoBox) {\n            this.markerAnimation(marker);\n\n            // Show infowindow\n            infowindow.setContent(infoBox.content)\n            infowindow.open(map, marker);\n            map.setZoom(11);\n            map.setCenter(marker.position);\n\n            if(window.innerWidth < 560) {\n                this.handleListToggle();\n            }\n\n            window.google.maps.event.addListener(map, 'click', function() {\n                infowindow.close();\n            });\n        }\n    }\n\n    markerAnimation(marker) {\n        if (marker.getAnimation() !== null) {\n            marker.setAnimation(null);\n        } else {\n            marker.setAnimation(window.google.maps.Animation.BOUNCE);\n        }\n        setTimeout(() => { marker.setAnimation(null) }, 1800);\n    }\n\n    async getMarkerInfo(marker) {\n        let url = await API.getVenuePhoto(marker.id);\n        let googleUrl = 'https://www.google.com/search?q=' + marker.title.replace(/ /g, '+');\n\n        let infoBox = '<div class=\"venueBlock\">' +\n            '<div class=\"venueIcon\"><img src=\"' + url + '\" alt=\"' + marker.title + '\" width=\"200\" height=\"200\" /></div>' +\n            '<div class=\"venueDetails\">' +\n            '<div class=\"venueName\"><a href=\"' + googleUrl + '\">' + marker.title + '</a></div>' +\n            '<div class=\"venueAddress\">' + marker.venue.location.formattedAddress[0] + '</div>' +\n            '<div class=\"venueAddress\">' + marker.venue.location.formattedAddress[1] + '</div></div></div>';\n\n        this.state.infoBoxes.push({ id: marker.id, name: marker.title, content: infoBox });\n    }\n\n    initMap = () => {\n        const { infoBoxes, markers, locations, introduction } = this.state;\n        let myLatLng = {lat: 39.092507, lng: -120.033492};\n\n        // Initialize a map\n        let map = new window.google.maps.Map(document.getElementById('map'), {\n            center: myLatLng,\n            zoom: 10,\n            mapTypeId: 'terrain'\n        });\n        this.setState({ map: map });\n\n        // Create an Infowindow\n        var infowindow = new window.google.maps.InfoWindow();\n        this.setState({ infowindow: infowindow });\n\n        // Create a markerTahoe\n        let markerTahoe = new window.google.maps.Marker({\n            position: myLatLng,\n            map:map,\n            title:\"Lake Tahoe\",\n            id: \"Lake_Tahoe\",\n            animation: window.google.maps.Animation.DROP\n        });\n\n        // Create markerTahoe infobox HTML\n        let TahoeInfoBox = '<div class=\"venueBlock\">' +\n            '<div class=\"venueIcon\"><img src=\"' + introduction.thumbnail + '\" alt=\"' + introduction.name + '\" width=\"200\" height=\"200\" /></div>' +\n            '<div class=\"venueDetails\">' +\n            '<div class=\"venueName\"><a href=\"https://www.google.com/search?q=lake+tahoe\">' + introduction.name + '</a></div>' +\n            '<div class=\"venueDescription\">' + introduction.description + '</div></div></div>';\n\n        infoBoxes.push({ id: markerTahoe.id, name: markerTahoe.title, content: TahoeInfoBox });\n\n        // Add \"click\" listener to markerTahoe\n        markerTahoe.addListener('click', function() {\n            infowindow.setContent(TahoeInfoBox);\n            infowindow.open(map, markerTahoe);\n            map.setZoom(11);\n            map.setCenter(markerTahoe.position);\n        });\n\n        // Display dynamic markers\n        this.state.venues.sort(sortBy('name'));\n        this.state.venues.forEach(venue => {\n            // Create  a marker\n            let marker = new window.google.maps.Marker({\n                position: { lat: venue.location.lat, lng: venue.location.lng },\n                map: map,\n                title: venue.name,\n                venue: venue,\n                id: venue.id,\n                animation: window.google.maps.Animation.DROP\n            });\n\n            // Get location info to marker\n            this.getMarkerInfo(marker);\n\n            // Add \"click\" listener to marker\n            window.google.maps.event.addListener(marker, 'click', () => {\n                this.showMarkerInfo(venue);\n            });\n\n            markers.push(marker);\n            locations.push(venue);\n        })\n    }\n\n\n    render() {\n        const { listOpen, introOpen, locations, markers, introduction } = this.state;\n\n        return (\n            <div className=\"App\">\n                <Header\n                    handleListToggle={ this.handleListToggle }\n                    handleIntroToggle={ this.handleIntroToggle }\n                />\n\n                { introOpen && (\n                    <section id=\"intro-container\" ref={node => { this.node = node; }}>\n                        <IntroDiv\n                            introduction = { introduction }\n                            handleIntroToggle={ this.handleIntroToggle }\n                        />\n                    </section>\n                )}\n\n                <Main\n                    listOpen={ listOpen }\n                    markers={ markers }\n                    locations={ locations }\n                    showMarkerInfo={ this.showMarkerInfo }\n                />\n\n                <Footer />\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // The old content is purged and the fresh content is added\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // Everything is precached.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <HashRouter><App /></HashRouter>,\n    document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}