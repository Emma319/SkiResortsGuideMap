{"ast":null,"code":"import _classCallCheck from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/Project7/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/Project7/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/Project7/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/Project7/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/Project7/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/Project7/src/component/NavBar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DebounceInput } from 'react-debounce-input';\nimport escapeRegExp from 'escape-string-regexp';\nimport sortBy from 'sort-by';\n\nvar NavBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NavBar, _Component);\n\n  function NavBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NavBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NavBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: ''\n    };\n\n    _this.updateQuery = function (q) {\n      _this.setState({\n        query: q\n      });\n    };\n\n    _this.clearQuery = function () {\n      _this.setState({\n        query: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NavBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          markers = _this$props.markers,\n          locations = _this$props.locations,\n          showMarkerInfo = _this$props.showMarkerInfo;\n      var query = this.state.query;\n      var showingLocations; // Update searched locations and markers\n\n      if (query) {\n        var match = new RegExp(escapeRegExp(query), 'i');\n        showingLocations = locations.filter(function (location) {\n          return match.test(location.name);\n        });\n        markers.forEach(function (marker) {\n          match.test(marker.title) ? marker.setVisible(true) : marker.setVisible(false);\n        });\n      } else {\n        showingLocations = locations;\n        markers.forEach(function (marker) {\n          return marker.setVisible(true);\n        });\n      }\n\n      showingLocations.sort(sortBy('name'));\n      return React.createElement(\"nav\", {\n        className: \"list-locations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-locations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(DebounceInput, {\n        minLength: 1,\n        debounceTimeout: 200,\n        autoFocus: true,\n        className: \"search-locations-input\",\n        type: \"text\",\n        placeholder: \"Search Ski Resorts\",\n        value: query,\n        onChange: function onChange(e) {\n          return _this2.updateQuery(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), showingLocations.length !== locations.length && React.createElement(\"div\", {\n        className: \"showing-locations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Now showing \", showingLocations.length, \" of \", locations.length, \" total\"), React.createElement(\"button\", {\n        onClick: this.clearQuery,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Show all\")), React.createElement(\"ol\", {\n        className: \"location-list\",\n        \"aria-labelledby\": \"aria-location-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, showingLocations.map(function (location) {\n        return React.createElement(\"li\", {\n          key: location.id,\n          className: \"location-list-item\",\n          tabIndex: \"0\",\n          role: \"button\",\n          onClick: function onClick() {\n            return showMarkerInfo(location);\n          },\n          onKeyPress: function onKeyPress() {\n            return showMarkerInfo(location);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"location-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, location.name));\n      })), React.createElement(\"label\", {\n        id: \"aria-location-list\",\n        className: \"aria-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Locations List\"));\n    }\n  }]);\n\n  return NavBar;\n}(Component);\n\nNavBar.propTypes = {\n  markers: PropTypes.array.isRequired,\n  locations: PropTypes.array.isRequired,\n  showMarkerInfo: PropTypes.func.isRequired\n};\nexport default NavBar;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/Project7/src/component/NavBar.js"],"names":["React","Component","PropTypes","DebounceInput","escapeRegExp","sortBy","NavBar","state","query","updateQuery","q","setState","clearQuery","props","markers","locations","showMarkerInfo","showingLocations","match","RegExp","filter","location","test","name","forEach","marker","title","setVisible","sort","e","target","value","length","map","id","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {DebounceInput} from 'react-debounce-input';\nimport escapeRegExp from 'escape-string-regexp';\nimport sortBy from 'sort-by';\n\n\nclass NavBar extends Component {\n    static propTypes = {\n      markers: PropTypes.array.isRequired,\n      locations: PropTypes.array.isRequired,\n      showMarkerInfo: PropTypes.func.isRequired\n    }\n\n    state = {\n        query: ''\n    }\n\n    updateQuery = (q) => {\n        this.setState({ query: q });\n    }\n\n    clearQuery = () => {\n        this.setState({ query: '' });\n    }\n\n    render() {\n        const { markers, locations, showMarkerInfo } = this.props;\n        const { query } = this.state;\n\n        let  showingLocations;\n        // Update searched locations and markers\n        if (query) {\n            const match = new RegExp(escapeRegExp(query), 'i');\n\n            showingLocations = locations.filter(location => match.test(location.name));\n            markers.forEach(marker => {\n                match.test(marker.title) ? marker.setVisible(true) : marker.setVisible(false);\n            });\n        } else {\n            showingLocations = locations;\n            markers.forEach(marker => marker.setVisible(true));\n        }\n\n        showingLocations.sort(sortBy('name'));\n\n        return (\n            <nav className='list-locations'>\n                <div className='search-locations'>\n                    <DebounceInput\n                        minLength={1}\n                        debounceTimeout={200}\n                        autoFocus\n                        className='search-locations-input'\n                        type='text'\n                        placeholder='Search Ski Resorts'\n                        value={ query }\n                        onChange={ e => this.updateQuery(e.target.value) }\n                    />\n                </div>\n\n                { showingLocations.length !== locations.length && (\n                    <div className='showing-locations'>\n                        <span>Now showing { showingLocations.length } of { locations.length } total</span>\n                        <button onClick={ this.clearQuery }>Show all</button>\n                    </div>\n                )}\n\n                <ol className='location-list' aria-labelledby=\"aria-location-list\">\n                    { showingLocations.map(location => (\n                        <li key={ location.id }\n                            className='location-list-item'\n                            tabIndex=\"0\"\n                            role=\"button\"\n                            onClick={ () => showMarkerInfo(location) }\n                            onKeyPress={ () => showMarkerInfo(location) }\n                        >\n                            <p className='location-title'>{ location.name }</p>\n                        </li>\n                    ))}\n                </ol>\n                <label id=\"aria-location-list\" className=\"aria-label\">Locations List</label>\n            </nav>\n        )\n    }\n}\n\nexport default NavBar\n"]},"metadata":{},"sourceType":"module"}