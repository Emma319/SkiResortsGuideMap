{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/SkiResortsGuideMap/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/SkiResortsGuideMap/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/SkiResortsGuideMap/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/SkiResortsGuideMap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/SkiResortsGuideMap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/SkiResortsGuideMap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/SkiResortsGuideMap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/SkiResortsGuideMap/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/SkiResortsGuideMap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/SkiResortsGuideMap/src/App.js\";\nimport React, { Component } from 'react';\nimport sortBy from 'sort-by';\nimport Header from './component/Header';\nimport IntroDiv from './component/IntroDiv';\nimport Main from './component/Main';\nimport Footer from './component/Footer';\nimport * as API from './API';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.renderMap = function () {\n      Promise.all([API.getGoogleMap(), API.getVenues(), API.getWiki(\"Lake Tahoe\"), API.getWikiURL(\"Lake Tahoe\")]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 4),\n            google = _ref2[0],\n            venues = _ref2[1],\n            wiki = _ref2[2],\n            wikiURL = _ref2[3];\n\n        _this.setState({\n          venues: venues\n        });\n\n        _this.setState({\n          introduction: {\n            id: wiki.pageid,\n            name: wiki.title,\n            description: wiki.description,\n            synopsis: wiki.extract,\n            url: wikiURL,\n            thumbnail: wiki.thumbnail.source\n          }\n        });\n\n        _this.initMap();\n\n        _this.mapStyle();\n      }).catch(function (error) {\n        console.log(\"Error render map!! \" + error);\n        alert('Error loading page...');\n      });\n    };\n\n    _this.initMap = function () {\n      var _this$state = _this.state,\n          infoBoxes = _this$state.infoBoxes,\n          markers = _this$state.markers,\n          locations = _this$state.locations,\n          introduction = _this$state.introduction;\n      var myLatLng = {\n        lat: 39.092507,\n        lng: -120.033492\n      }; // Initialize a map\n\n      var map = new window.google.maps.Map(document.getElementById('map'), {\n        center: myLatLng,\n        zoom: 10,\n        mapTypeId: 'terrain'\n      });\n\n      _this.setState({\n        map: map\n      }); // Create an Infowindow\n\n\n      var infowindow = new window.google.maps.InfoWindow();\n\n      _this.setState({\n        infowindow: infowindow\n      }); // Create a markerTahoe\n\n\n      var markerTahoe = new window.google.maps.Marker({\n        position: myLatLng,\n        map: map,\n        title: \"Lake Tahoe\",\n        id: \"Lake_Tahoe\",\n        animation: window.google.maps.Animation.DROP\n      }); // Create markerTahoe infobox HTML\n\n      var TahoeInfoBox = '<div class=\"venueBlock\">' + '<div class=\"venueIcon\"><img src=\"' + introduction.thumbnail + '\" alt=\"' + introduction.name + '\" width=\"200\" height=\"200\" /></div>' + '<div class=\"venueDetails\">' + '<div class=\"venueName\"><a href=\"https://www.google.com/search?q=lake+tahoe\">' + introduction.name + '</a></div>' + '<div class=\"venueDescription\">' + introduction.description + '</div></div></div>';\n      infoBoxes.push({\n        id: markerTahoe.id,\n        name: markerTahoe.title,\n        content: TahoeInfoBox\n      }); // Add \"click\" listener to markerTahoe\n\n      markerTahoe.addListener('click', function () {\n        infowindow.setContent(TahoeInfoBox);\n        infowindow.open(map, markerTahoe);\n        map.setZoom(11);\n        map.setCenter(markerTahoe.position);\n      }); // Display dynamic markers\n\n      _this.state.venues.sort(sortBy('name'));\n\n      _this.state.venues.forEach(function (venue) {\n        // Create  a marker\n        var marker = new window.google.maps.Marker({\n          position: {\n            lat: venue.location.lat,\n            lng: venue.location.lng\n          },\n          map: map,\n          title: venue.name,\n          venue: venue,\n          id: venue.id,\n          animation: window.google.maps.Animation.DROP\n        }); // Get location info to marker\n\n        _this.getMarkerInfo(marker); // Add \"click\" listener to marker\n\n\n        window.google.maps.event.addListener(marker, 'click', function () {\n          _this.showMarkerInfo(venue);\n        });\n        markers.push(marker);\n        locations.push(venue);\n      });\n    };\n\n    _this.state = {\n      map: '',\n      infowindow: '',\n      infoBoxes: [],\n      markers: [],\n      locations: [],\n      introduction: '',\n      listOpen: false,\n      introOpen: false\n    };\n    _this.mapStyle = _this.mapStyle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleListToggle = _this.handleListToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleIntroToggle = _this.handleIntroToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOutsideClick = _this.handleOutsideClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showMarkerInfo = _this.showMarkerInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.markerAnimation = _this.markerAnimation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n      API.getGoogleMap();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderMap();\n    }\n  }, {\n    key: \"mapStyle\",\n    value: function mapStyle() {\n      if (window.innerWidth > 560) {\n        if (!this.state.listOpen) {\n          var mapContainer = document.getElementById('map-container');\n          mapContainer.style.setProperty('--map_container-width', \"100%\");\n        }\n      }\n    }\n  }, {\n    key: \"handleListToggle\",\n    value: function handleListToggle() {\n      this.setState(function (state) {\n        return {\n          listOpen: !state.listOpen\n        };\n      });\n      this.mapStyle();\n    }\n  }, {\n    key: \"handleIntroToggle\",\n    value: function handleIntroToggle() {\n      if (!this.state.introOpen) {\n        document.addEventListener('click', this.handleOutsideClick, false);\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick, false);\n      }\n\n      this.setState(function (state) {\n        return {\n          introOpen: !state.introOpen\n        };\n      });\n    }\n  }, {\n    key: \"handleOutsideClick\",\n    value: function handleOutsideClick(e) {\n      // ignore clicks on the component itself\n      if (this.node.contains(e.target)) {\n        return;\n      }\n\n      this.handleIntroToggle();\n    }\n  }, {\n    key: \"showMarkerInfo\",\n    value: function showMarkerInfo(venue) {\n      var _this$state2 = this.state,\n          map = _this$state2.map,\n          infowindow = _this$state2.infowindow,\n          infoBoxes = _this$state2.infoBoxes,\n          markers = _this$state2.markers;\n      var marker = markers.filter(function (marker) {\n        return marker.id === venue.id;\n      })[0];\n      var infoBox = infoBoxes.filter(function (infoBox) {\n        return infoBox.id === venue.id;\n      })[0];\n\n      if (marker && infoBox) {\n        this.markerAnimation(marker); // Show infowindow\n\n        infowindow.setContent(infoBox.content);\n        infowindow.open(map, marker);\n        map.setZoom(11);\n        map.setCenter(marker.position);\n\n        if (window.innerWidth < 560) {\n          this.handleListToggle();\n        }\n\n        window.google.maps.event.addListener(map, 'click', function () {\n          infowindow.close();\n        });\n      }\n    }\n  }, {\n    key: \"markerAnimation\",\n    value: function markerAnimation(marker) {\n      if (marker.getAnimation() !== null) {\n        marker.setAnimation(null);\n      } else {\n        marker.setAnimation(window.google.maps.Animation.BOUNCE);\n      }\n\n      setTimeout(function () {\n        marker.setAnimation(null);\n      }, 1800);\n    }\n  }, {\n    key: \"getMarkerInfo\",\n    value: function () {\n      var _getMarkerInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(marker) {\n        var url, googleUrl, infoBox;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return API.getVenuePhoto(marker.id);\n\n              case 2:\n                url = _context.sent;\n                googleUrl = 'https://www.google.com/search?q=' + marker.title.replace(/ /g, '+');\n                infoBox = '<div class=\"venueBlock\">' + '<div class=\"venueIcon\"><img src=\"' + url + '\" alt=\"' + marker.title + '\" width=\"200\" height=\"200\" /></div>' + '<div class=\"venueDetails\">' + '<div class=\"venueName\"><a href=\"' + googleUrl + '\">' + marker.title + '</a></div>' + '<div class=\"venueAddress\">' + marker.venue.location.formattedAddress[0] + '</div>' + '<div class=\"venueAddress\">' + marker.venue.location.formattedAddress[1] + '</div></div></div>';\n                this.state.infoBoxes.push({\n                  id: marker.id,\n                  name: marker.title,\n                  content: infoBox\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getMarkerInfo(_x) {\n        return _getMarkerInfo.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          listOpen = _this$state3.listOpen,\n          introOpen = _this$state3.introOpen,\n          locations = _this$state3.locations,\n          markers = _this$state3.markers,\n          introduction = _this$state3.introduction;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Header, {\n        handleListToggle: this.handleListToggle,\n        handleIntroToggle: this.handleIntroToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), introOpen && React.createElement(\"section\", {\n        id: \"intro-container\",\n        ref: function ref(node) {\n          _this2.node = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(IntroDiv, {\n        introduction: introduction,\n        handleIntroToggle: this.handleIntroToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), React.createElement(Main, {\n        listOpen: listOpen,\n        markers: markers,\n        locations: locations,\n        showMarkerInfo: this.showMarkerInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/MOOC/Udacity/GWG/FEWD/05 Building with React/Project7_NeighborhoodMap/SkiResortsGuideMap/src/App.js"],"names":["React","Component","sortBy","Header","IntroDiv","Main","Footer","API","App","props","renderMap","Promise","all","getGoogleMap","getVenues","getWiki","getWikiURL","then","google","venues","wiki","wikiURL","setState","introduction","id","pageid","name","title","description","synopsis","extract","url","thumbnail","source","initMap","mapStyle","catch","error","console","log","alert","state","infoBoxes","markers","locations","myLatLng","lat","lng","map","window","maps","Map","document","getElementById","center","zoom","mapTypeId","infowindow","InfoWindow","markerTahoe","Marker","position","animation","Animation","DROP","TahoeInfoBox","push","content","addListener","setContent","open","setZoom","setCenter","sort","forEach","venue","marker","location","getMarkerInfo","event","showMarkerInfo","listOpen","introOpen","bind","handleListToggle","handleIntroToggle","handleOutsideClick","markerAnimation","removeEventListener","innerWidth","mapContainer","style","setProperty","addEventListener","e","node","contains","target","filter","infoBox","close","getAnimation","setAnimation","BOUNCE","setTimeout","getVenuePhoto","googleUrl","replace","formattedAddress"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport sortBy from 'sort-by';\n\nimport Header from './component/Header';\nimport IntroDiv from './component/IntroDiv';\nimport Main from './component/Main';\nimport Footer from './component/Footer';\n\nimport * as API from './API';\nimport './App.css';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            map: '',\n            infowindow: '',\n            infoBoxes: [],\n            markers: [],\n            locations: [],\n            introduction: '',\n            listOpen: false,\n            introOpen: false\n        }\n        this.mapStyle = this.mapStyle.bind(this);\n        this.handleListToggle = this.handleListToggle.bind(this);\n        this.handleIntroToggle = this.handleIntroToggle.bind(this);\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\n        this.showMarkerInfo = this.showMarkerInfo.bind(this);\n        this.markerAnimation = this.markerAnimation.bind(this);\n    }\n\n    componentWillMount() {\n        document.removeEventListener('click', this.handleOutsideClick, false);\n        API.getGoogleMap();\n    }\n\n    componentDidMount() {\n        this.renderMap();\n    }\n\n    renderMap = () => {\n        Promise.all([ API.getGoogleMap(), API.getVenues(), API.getWiki(\"Lake Tahoe\"), API.getWikiURL(\"Lake Tahoe\") ])\n        .then(([google, venues, wiki, wikiURL]) => {\n            this.setState({ venues: venues });\n            this.setState({ introduction: {id: wiki.pageid, name: wiki.title, description: wiki.description, synopsis: wiki.extract, url: wikiURL, thumbnail: wiki.thumbnail.source} });\n\n            this.initMap();\n            this.mapStyle();\n        })\n        .catch(error => {\n            console.log(\"Error render map!! \" + error);\n            alert('Error loading page...');\n        })\n    }\n\n    mapStyle() {\n        if(window.innerWidth > 560) {\n            if(!this.state.listOpen) {\n                var mapContainer = document.getElementById('map-container')\n                mapContainer.style.setProperty('--map_container-width', \"100%\")\n            }\n        }\n    }\n\n    handleListToggle() {\n        this.setState( state => ({ listOpen: !state.listOpen }));\n        this.mapStyle();\n    }\n\n    handleIntroToggle() {\n        if (!this.state.introOpen) {\n            document.addEventListener('click', this.handleOutsideClick, false);\n        } else {\n            document.removeEventListener('click', this.handleOutsideClick, false);\n        }\n\n        this.setState( state => ({ introOpen: !state.introOpen }));\n    }\n\n    handleOutsideClick(e) {\n        // ignore clicks on the component itself\n        if (this.node.contains(e.target)) {\n            return;\n        }\n        this.handleIntroToggle();\n    }\n\n    showMarkerInfo(venue) {\n        const { map, infowindow, infoBoxes, markers } = this.state;\n        let marker = markers.filter(marker => marker.id === venue.id)[0];\n        let infoBox = infoBoxes.filter(infoBox => infoBox.id === venue.id)[0];\n\n        if (marker && infoBox) {\n            this.markerAnimation(marker);\n\n            // Show infowindow\n            infowindow.setContent(infoBox.content)\n            infowindow.open(map, marker);\n            map.setZoom(11);\n            map.setCenter(marker.position);\n\n            if(window.innerWidth < 560) {\n                this.handleListToggle();\n            }\n\n            window.google.maps.event.addListener(map, 'click', function() {\n                infowindow.close();\n            });\n        }\n    }\n\n    markerAnimation(marker) {\n        if (marker.getAnimation() !== null) {\n            marker.setAnimation(null);\n        } else {\n            marker.setAnimation(window.google.maps.Animation.BOUNCE);\n        }\n        setTimeout(() => { marker.setAnimation(null) }, 1800);\n    }\n\n    async getMarkerInfo(marker) {\n        let url = await API.getVenuePhoto(marker.id);\n        let googleUrl = 'https://www.google.com/search?q=' + marker.title.replace(/ /g, '+');\n\n        let infoBox = '<div class=\"venueBlock\">' +\n            '<div class=\"venueIcon\"><img src=\"' + url + '\" alt=\"' + marker.title + '\" width=\"200\" height=\"200\" /></div>' +\n            '<div class=\"venueDetails\">' +\n            '<div class=\"venueName\"><a href=\"' + googleUrl + '\">' + marker.title + '</a></div>' +\n            '<div class=\"venueAddress\">' + marker.venue.location.formattedAddress[0] + '</div>' +\n            '<div class=\"venueAddress\">' + marker.venue.location.formattedAddress[1] + '</div></div></div>';\n\n        this.state.infoBoxes.push({ id: marker.id, name: marker.title, content: infoBox });\n    }\n\n    initMap = () => {\n        const { infoBoxes, markers, locations, introduction } = this.state;\n        let myLatLng = {lat: 39.092507, lng: -120.033492};\n\n        // Initialize a map\n        let map = new window.google.maps.Map(document.getElementById('map'), {\n            center: myLatLng,\n            zoom: 10,\n            mapTypeId: 'terrain'\n        });\n        this.setState({ map: map });\n\n        // Create an Infowindow\n        var infowindow = new window.google.maps.InfoWindow();\n        this.setState({ infowindow: infowindow });\n\n        // Create a markerTahoe\n        let markerTahoe = new window.google.maps.Marker({\n            position: myLatLng,\n            map:map,\n            title:\"Lake Tahoe\",\n            id: \"Lake_Tahoe\",\n            animation: window.google.maps.Animation.DROP\n        });\n\n        // Create markerTahoe infobox HTML\n        let TahoeInfoBox = '<div class=\"venueBlock\">' +\n            '<div class=\"venueIcon\"><img src=\"' + introduction.thumbnail + '\" alt=\"' + introduction.name + '\" width=\"200\" height=\"200\" /></div>' +\n            '<div class=\"venueDetails\">' +\n            '<div class=\"venueName\"><a href=\"https://www.google.com/search?q=lake+tahoe\">' + introduction.name + '</a></div>' +\n            '<div class=\"venueDescription\">' + introduction.description + '</div></div></div>';\n\n        infoBoxes.push({ id: markerTahoe.id, name: markerTahoe.title, content: TahoeInfoBox });\n\n        // Add \"click\" listener to markerTahoe\n        markerTahoe.addListener('click', function() {\n            infowindow.setContent(TahoeInfoBox);\n            infowindow.open(map, markerTahoe);\n            map.setZoom(11);\n            map.setCenter(markerTahoe.position);\n        });\n\n        // Display dynamic markers\n        this.state.venues.sort(sortBy('name'));\n        this.state.venues.forEach(venue => {\n            // Create  a marker\n            let marker = new window.google.maps.Marker({\n                position: { lat: venue.location.lat, lng: venue.location.lng },\n                map: map,\n                title: venue.name,\n                venue: venue,\n                id: venue.id,\n                animation: window.google.maps.Animation.DROP\n            });\n\n            // Get location info to marker\n            this.getMarkerInfo(marker);\n\n            // Add \"click\" listener to marker\n            window.google.maps.event.addListener(marker, 'click', () => {\n                this.showMarkerInfo(venue);\n            });\n\n            markers.push(marker);\n            locations.push(venue);\n        })\n    }\n\n\n    render() {\n        const { listOpen, introOpen, locations, markers, introduction } = this.state;\n\n        return (\n            <div className=\"App\">\n                <Header\n                    handleListToggle={ this.handleListToggle }\n                    handleIntroToggle={ this.handleIntroToggle }\n                />\n\n                { introOpen && (\n                    <section id=\"intro-container\" ref={node => { this.node = node; }}>\n                        <IntroDiv\n                            introduction = { introduction }\n                            handleIntroToggle={ this.handleIntroToggle }\n                        />\n                    </section>\n                )}\n\n                <Main\n                    listOpen={ listOpen }\n                    markers={ markers }\n                    locations={ locations }\n                    showMarkerInfo={ this.showMarkerInfo }\n                />\n\n                <Footer />\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}